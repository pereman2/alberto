[{"C:\\Users\\Administrador\\git\\alberto\\frontend\\src\\index.js":"1","C:\\Users\\Administrador\\git\\alberto\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\Administrador\\git\\alberto\\frontend\\src\\components\\App.js":"3","C:\\Users\\Administrador\\git\\alberto\\frontend\\src\\components\\Busqueda.js":"4","C:\\Users\\Administrador\\git\\alberto\\frontend\\src\\components\\Carga.js":"5","C:\\Users\\Administrador\\git\\alberto\\frontend\\src\\components\\ResultadoCarga.js":"6","C:\\Users\\Administrador\\git\\alberto\\frontend\\src\\components\\Resultados.js":"7","C:\\Users\\Administrador\\git\\alberto\\frontend\\src\\components\\Resultado.js":"8","C:\\Users\\Administrador\\git\\alberto\\frontend\\src\\requests\\SearchRequest.js":"9"},{"size":515,"mtime":1610009703421,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1610009700629,"results":"12","hashOfConfig":"11"},{"size":2986,"mtime":1610009701364,"results":"13","hashOfConfig":"11"},{"size":4451,"mtime":1610009702800,"results":"14","hashOfConfig":"11"},{"size":4115,"mtime":1610009701287,"results":"15","hashOfConfig":"11"},{"size":2207,"mtime":1610009695203,"results":"16","hashOfConfig":"11"},{"size":3854,"mtime":1610537510150,"results":"17","hashOfConfig":"11"},{"size":1908,"mtime":1610009701757,"results":"18","hashOfConfig":"11"},{"size":1267,"mtime":1610009703055,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"axhylh",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"22"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"44"},"C:\\Users\\Administrador\\git\\alberto\\frontend\\src\\index.js",[],["45","46"],"C:\\Users\\Administrador\\git\\alberto\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Administrador\\git\\alberto\\frontend\\src\\components\\App.js",["47","48","49","50","51","52","53"],"import React, { useDebugValue } from 'react'\nimport '../css/App.css';\nimport Carga from './Carga';\nimport Busqueda from './Busqueda';\nimport Resultados from './Resultados';\nimport ResultadoCarga from './ResultadoCarga';\n\nconst testData = {\n  \"articulos\": [\n    {\n      \"autores\": [\"paquito salas\", \"manuel alvado\"],\n      \"titulo\": \"titulo irrelevante xd\",\n      \"revista\": \"revista jeje\",\n      \"volumen\": 2,\n      \"numero\": 3,\n      \"mes\": 3,\n      \"pagina-inicio\": 12,\n      \"pagina-fin\": 15,\n      \"URL\": \"peredb.com\"\n    }\n  ],\n  \"libros\": [\n    {\n      \"autores\": [\"paquito salas\", \"manuel alvado\"],\n      \"titulo\": \"titulo irrelevante xd\",\n      \"editorial\": \"editorial ginebra\",\n      \"año\": 1999,\n      \"URL\": \"peredb.com\"\n    }\n\n  ],\n  \"congresos\": [\n    {\n      \"autores\": [\"paquito salas\", \"manuel alvado\"],\n      \"titulo\": \"titulo irrelevante xd\",\n      \"revista\": \"revista jeje\",\n      \"edicion\": 2,\n      \"congreso\": \"congreso pringao\",\n      \"lugar\": \"albacete\",\n      \"pagina-inicio\": 12,\n      \"pagina-fin\": 15,\n      \"URL\": \"peredb.com\"\n    }\n\n  ]\n}\n\nconst testDataLoad = {\n  \"dblp\": 123,\n  \"ieeex\": 12,\n  \"scholar\": 200,\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      page: \"busqueda\",\n      resultPage: 1,\n      searchResults: [],\n      loadTotals: undefined,\n      searchByAutor: false,\n    }\n  }\n  renderPage() {\n    if (this.state.page == \"carga\") {\n      return <Carga\n        onLoad={(totals) => this.load(totals)}\n      />\n    } else if (this.state.page == \"busqueda\") {\n      return <Busqueda onSearch={(results) => this.search(1, results)}\n        toggleSearchByAutor={(res) => this.toggleSearchByAutor(res)} />\n    } else if (this.state.page == \"resultados\") {\n      return <Resultados\n        searchByAutor={this.state.searchByAutor}\n        data={this.state.searchResults}\n        page={this.state.resultPage}\n        onChangeResultPage={(page) => this.search(page)}\n      />\n    } else if (this.state.page == \"resultadosCarga\") {\n      return <ResultadoCarga\n        onExit={() => this.changePanel(\"busqueda\")}\n        totals={this.state.loadTotals}\n      />\n    }\n  }\n\n  changePanel(panel) {\n    this.setState({\n      page: panel\n    })\n  }\n\n  search(page, results) {\n    console.log(page);\n    this.setState({\n      resultPage: page,\n      searchResults: results,\n      page: \"resultados\"\n    });\n  }\n\n  toggleSearchByAutor(searchByAutor) {\n    this.setState({\n      searchByAutor: searchByAutor,\n    })\n  }\n\n  load(totals) {\n    this.setState({\n      loadTotals: totals,\n      page: \"resultadosCarga\",\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"nav\">\n          <button className=\"nav-button\" onClick={() => this.changePanel(\"carga\")}>Carga</button>\n          <button className=\"nav-button\" onClick={() => this.changePanel(\"busqueda\")}>Busqueda</button>\n        </div>\n        {this.renderPage()}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","C:\\Users\\Administrador\\git\\alberto\\frontend\\src\\components\\Busqueda.js",["54","55","56"],"import React from 'react'\nimport '../css/App.css';\nimport '../css/Busqueda.css';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { requestDBSearch } from \"../requests/SearchRequest\";\n\n\n\nclass Busqueda extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      startDate: null,\n      endDate: null,\n      publicaciones: []\n    }\n    this.tituloDiv = React.createRef();\n    this.autorDiv = React.createRef();\n  }\n\n  pickEndDate(date) {\n    this.setState({\n      endDate: date\n    })\n  }\n  pickStartDate(date) {\n    this.setState({\n      startDate: date\n    })\n  }\n  togglePublicacion(e, fuente) {\n    if (this.state.publicaciones.includes(fuente)) {\n      this.state.publicaciones.splice(this.state.publicaciones.indexOf(fuente), 1);\n      e.target.style.backgroundColor = \"transparent\";\n    } else {\n      this.state.publicaciones.push(fuente);\n      e.target.style.backgroundColor = \"black\";\n    }\n  }\n  getTitulo() {\n    return this.tituloDiv.current.value;\n  }\n  getAutor() {\n    return this.autorDiv.current.value;\n  }\n\n  toggleAutor() {\n    return !this.getAutor() == \"\";\n  }\n\n  async buscar() {\n    this.props.toggleSearchByAutor(this.toggleAutor());\n    let autor = this.getAutor().trim();\n    if (autor === undefined || autor == \"\") {\n      autor = \"%20\";\n    }\n    let titulo = this.getTitulo().trim();\n    if (titulo === undefined || titulo == \"\") {\n      titulo = \"%20\";\n    }\n    let startYear = this.state.startDate != null ? this.state.startDate.getFullYear() : \"0\";\n    let endYear = this.state.endDate != null ? this.state.endDate.getFullYear() : \"0\";\n    let articulo = this.state.publicaciones.includes(\"articulo\") ? \"true\" : \"false\";\n    let congreso = this.state.publicaciones.includes(\"congreso\") ? \"true\" : \"false\";\n    let libro = this.state.publicaciones.includes(\"libro\") ? \"true\" : \"false\";\n    let results = await requestDBSearch(titulo, autor, startYear, endYear, articulo, congreso, libro);\n    this.props.onSearch(results);\n  }\n  cancelar() {\n\n  }\n  render() {\n    return (\n      <div className=\"busqueda\">\n        <div className=\"title\">Búsqueda bibliográfica de IEI</div>\n        <hr className=\"line\"></hr>\n        <div className=\"fuentes-datos\">\n          <div className=\"title-fuente\">Fuentes de datos</div>\n          <div className=\"fuentes-datos-elecciones\">\n            <div className=\"fuente-dato\">\n              <div className=\"fuente-dato-tick\" onClick={e => this.togglePublicacion(e, \"articulo\")}></div>\n              <div className=\"fuente-dato-name\">articulo</div>\n            </div>\n            <div className=\"fuente-dato\">\n              <div className=\"fuente-dato-tick\" onClick={e => this.togglePublicacion(e, \"libro\")}></div>\n              <div className=\"fuente-dato-name\">libro</div>\n            </div>\n            <div className=\"fuente-dato\">\n              <div className=\"fuente-dato-tick\" onClick={e => this.togglePublicacion(e, \"congreso\")}></div>\n              <div className=\"fuente-dato-name\">comunicación en congreso</div>\n            </div>\n          </div>\n        </div>\n        <div className=\"title-fuente\" style={{ marginTop: \"20px\" }}>Buscar referencias por</div>\n        <div className=\"fields\">\n          <input className=\"input\" ref={this.autorDiv} placeholder=\"Autor...\"></input>\n          <input className=\"input\" ref={this.tituloDiv} placeholder=\"Título...\"></input>\n          <div className=\"año\">\n            <div className=\"año-nombre\">Fecha inicio</div>\n            <DatePicker\n              selected={this.state.startDate}\n              dateFormat=\"dd/MM/yy\"\n              onChange={date => this.pickStartDate(date)}\n              date={this.state.startDate}\n            >\n            </DatePicker>\n          </div>\n          <div className=\"año\">\n            <div className=\"año-nombre\">Fecha fin</div>\n            <DatePicker\n              selected={this.state.endDate}\n              dateFormat=\"dd/MM/yy\"\n              onChange={date => this.pickEndDate(date)}\n              date={this.state.endDate}\n            >\n            </DatePicker>\n          </div>\n        </div>\n        <div className=\"botones-formularios\">\n          <button className=\"boton-formulario\" onClick={() => this.buscar()}>Buscar</button>\n          <button className=\"boton-formulario\" onClick={() => this.cancelar()}>Cancelar</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Busqueda;\n","C:\\Users\\Administrador\\git\\alberto\\frontend\\src\\components\\Carga.js",[],"C:\\Users\\Administrador\\git\\alberto\\frontend\\src\\components\\ResultadoCarga.js",[],"C:\\Users\\Administrador\\git\\alberto\\frontend\\src\\components\\Resultados.js",["57","58","59","60","61"],"import React from 'react'\nimport '../css/Resultados.css';\nimport '../css/App.css';\nimport Resultado from './Resultado';\nimport leftImage from '../assets/left.png'\nimport rightImage from '../assets/right.png'\nimport leftMoreImage from '../assets/leftMore.png'\nimport rightMoreImage from '../assets/rightMore.png'\n\nclass Resultados extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            page: 1,\n            pageMax: 5\n        }\n    }\n\n    isEmpty(obj) {\n        return Object.keys(obj).length === 0;\n    }\n\n\n    renderResultados() {\n        let resultados = [];\n        // iterar tipos : libros articulos congresos\n        console.log(this.props.data);\n        if (this.props.data !== undefined && this.props.data.length > 0) {\n            for (let i = (this.state.page - 1) * this.state.pageMax; i < this.props.data.length && i < this.state.pageMax * this.state.page; i++) {\n                let value = this.props.data[i];\n                let autores = value[\"autores\"];\n                if ((this.props.searchByAutor && !this.isEmpty(autores[0])) || !this.props.searchByAutor) {\n                    let resultado = (\n                        <Resultado data={value} key={i} pos={i + 1} type={value[\"tipo\"]}></Resultado>\n                    )\n                    resultados.push(resultado);\n                }\n            }\n\n        }\n        if (resultados.length == 0) {\n            return (<div className=\"res-no-results\">No se han encontrado resultados</div>);\n        } else {\n            return resultados;\n        }\n\n    }\n\n    renderPageNumbers() {\n        let page = this.state.page;\n        const styledPage = (page) => {\n            if (page <= 0 || page >= (this.props.data.length / this.state.pageMax + 1)) {\n                return \"_\";\n            } else {\n                return page;\n            }\n        }\n        return (\n            <div className=\"nav-numbers\">\n                <span onClick={() => this.movePage(-2)} style={{ fontSize: \"30px\", fontWeight: \"normal\", }}>{styledPage(page - 2)}</span>\n                <span onClick={() => this.movePage(-1)} style={{ fontSize: \"30px\", fontWeight: \"normal\" }}>{styledPage(page - 1)}</span>\n                <span style={{ fontSize: \"45px\", fontWeight: \"bold\" }}>{page}</span>\n                <span onClick={() => this.movePage(+1)} style={{ fontSize: \"30px\", fontWeight: \"normal\" }}>{styledPage(page + 1)}</span>\n                <span onClick={() => this.movePage(+2)} style={{ fontSize: \"30px\", fontWeight: \"normal\" }}>{styledPage(page + 2)}</span>\n            </div>\n        );\n    }\n\n    movePage(movement) {\n        let newPage = this.state.page + movement;\n        if (newPage > 0 && newPage < this.props.data.length / this.state.pageMax + 1) {\n            this.setState({\n                page: newPage\n            })\n        }\n    }\n    render() {\n        return (\n            <div className=\"resultados-wrapper\">\n                <div className=\"title\">Búsqueda bibliográfica de IEI</div>\n                <hr className=\"line\"></hr>\n                <div className=\"resultados\">\n                    {this.renderResultados()}\n\n                </div>\n                <div className=\"page-nav\">\n                    <img className=\"nav-arrow\" onClick={() => this.movePage(-2)} src={leftMoreImage}></img>\n                    <img className=\"nav-arrow\" onClick={() => this.movePage(-1)} src={leftImage}></img>\n                    <div className=\"pages-nav\">\n                        {this.renderPageNumbers()}\n                    </div>\n                    <img className=\"nav-arrow\" onClick={() => this.movePage(1)} src={rightImage}></img>\n                    <img className=\"nav-arrow\" onClick={() => this.movePage(2)} src={rightMoreImage}></img>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Resultados;\n","C:\\Users\\Administrador\\git\\alberto\\frontend\\src\\components\\Resultado.js",["62","63","64"],"\nimport React from 'react'\nimport '../css/Resultado.css';\nclass Resultado extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        }\n    }\n\n\n\n\n    renderResultado() {\n        let autores = this.props.data[\"autores\"];\n        console.log(this.props.data);\n        let res = \"\" + this.props.pos + \". \" + \"(\" + this.props.type + \") \";\n        for (const [key, value] of Object.entries(this.props.data)) {\n\n            let cv = this.getConvertedValue(key, value);\n            if (cv !== undefined && !cv.includes(\"undefined\")) {\n                console.log(cv);\n                res += cv\n            }\n        }\n        return res.slice(0, res.length - 1);\n    }\n\n    getConvertedValue(key, value) {\n        let res = undefined;\n        if (value == \"\") return res\n        switch (key) {\n            case \"numero\":\n                res = \"Número: \" + value + \", \";\n                break;\n            case \"volumen\":\n                res = \"Volumen: \" + value + \", \";\n                break;\n            case \"tipo\":\n                break;\n            case \"URL\":\n                res = \"\\n\" + value + \"\\n\";\n                break;\n            case \"autores\":\n                res = \"\";\n                value.forEach(element => {\n                    res += element[\"nombre\"] + \" \" + element[\"apellidos\"] + \", \";\n                });\n                break;\n            case \"inicio\":\n                res = \"\\n Página de inicio: \" + value + \",\\n\";\n                break;\n            case \"fin\":\n                res = \"\\n Página final: \" + value + \",\\n\";\n                break;\n            default:\n                res = value + \", \";\n                break;\n        }\n        return res;\n    }\n\n    render() {\n        return (\n            <div className=\"resultado\">\n                {this.renderResultado()}\n            </div>\n        );\n    }\n}\n\nexport default Resultado;\n","C:\\Users\\Administrador\\git\\alberto\\frontend\\src\\requests\\SearchRequest.js",["65","66"],"const request = require('axios');\n\nexport async function requestDBSearch(titulo, autor, fechaI, fechaF, article, congress, book) {\n    let publications = 0;\n    let requestDB = \"http://localhost:8080/ApiRestDB/servicios/BuscarDB/\";\n    const query = {\n        'url': requestDB + titulo + \"/\" + autor + \"/\" + fechaI + \"/\" + fechaF + \"/\" + article + \"/\" + congress + \"/\" + book,\n        'rejectUnauthorized': false,\n    };\n    console.log(query);\n    await request(query)\n        .then(function (response) {\n            {\n                publications = response.data;\n                console.log(publications[\"publicaciones\"])\n            }\n        });\n    return publications[\"publicaciones\"];\n}\n\nexport async function requestDBLoad(fechaI, fechaF, dblp, ieeex, scholar) {\n    let publications = 0;\n    let requestDB = \"http://localhost:8080/ApiRestDB/servicios/LoadDB/\";\n    const query = {\n        'url': requestDB + fechaI + \"/\" + fechaF + \"/\" + dblp + \"/\" + ieeex + \"/\" + scholar,\n        'rejectUnauthorized': false,\n    };\n    console.log(query);\n    await request(query)\n        .then(function (response) {\n            {\n                publications = response.data;\n                console.log(publications)\n            }\n        });\n    return publications;\n}",["67","68"],{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":1,"column":17,"nodeType":"75","messageId":"76","endLine":1,"endColumn":30},{"ruleId":"73","severity":1,"message":"77","line":8,"column":7,"nodeType":"75","messageId":"76","endLine":8,"endColumn":15},{"ruleId":"73","severity":1,"message":"78","line":48,"column":7,"nodeType":"75","messageId":"76","endLine":48,"endColumn":19},{"ruleId":"79","severity":1,"message":"80","line":66,"column":25,"nodeType":"81","messageId":"82","endLine":66,"endColumn":27},{"ruleId":"79","severity":1,"message":"80","line":70,"column":32,"nodeType":"81","messageId":"82","endLine":70,"endColumn":34},{"ruleId":"79","severity":1,"message":"80","line":73,"column":32,"nodeType":"81","messageId":"82","endLine":73,"endColumn":34},{"ruleId":"79","severity":1,"message":"80","line":80,"column":32,"nodeType":"81","messageId":"82","endLine":80,"endColumn":34},{"ruleId":"79","severity":1,"message":"80","line":49,"column":29,"nodeType":"81","messageId":"82","endLine":49,"endColumn":31},{"ruleId":"79","severity":1,"message":"80","line":55,"column":38,"nodeType":"81","messageId":"82","endLine":55,"endColumn":40},{"ruleId":"79","severity":1,"message":"80","line":59,"column":40,"nodeType":"81","messageId":"82","endLine":59,"endColumn":42},{"ruleId":"79","severity":1,"message":"80","line":41,"column":31,"nodeType":"81","messageId":"82","endLine":41,"endColumn":33},{"ruleId":"83","severity":1,"message":"84","line":87,"column":21,"nodeType":"85","endLine":87,"endColumn":102},{"ruleId":"83","severity":1,"message":"84","line":88,"column":21,"nodeType":"85","endLine":88,"endColumn":98},{"ruleId":"83","severity":1,"message":"84","line":92,"column":21,"nodeType":"85","endLine":92,"endColumn":98},{"ruleId":"83","severity":1,"message":"84","line":93,"column":21,"nodeType":"85","endLine":93,"endColumn":102},{"ruleId":"73","severity":1,"message":"86","line":15,"column":13,"nodeType":"75","messageId":"76","endLine":15,"endColumn":20},{"ruleId":"87","severity":1,"message":"88","line":17,"column":46,"nodeType":"81","messageId":"89","endLine":17,"endColumn":47},{"ruleId":"79","severity":1,"message":"80","line":31,"column":19,"nodeType":"81","messageId":"82","endLine":31,"endColumn":21},{"ruleId":"90","severity":1,"message":"91","line":13,"column":13,"nodeType":"92","messageId":"93","endLine":16,"endColumn":14},{"ruleId":"90","severity":1,"message":"91","line":31,"column":13,"nodeType":"92","messageId":"93","endLine":34,"endColumn":14},{"ruleId":"69","replacedBy":"94"},{"ruleId":"71","replacedBy":"95"},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"no-unused-vars","'useDebugValue' is defined but never used.","Identifier","unusedVar","'testData' is assigned a value but never used.","'testDataLoad' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'autores' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock",["96"],["97"],"no-global-assign","no-unsafe-negation"]